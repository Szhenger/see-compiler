# Project Name: SeeC
# Version: 1.0.0
# Log Start Date: 2025-05-05
# Log File: doc_log.txt

[2025-05-05] - Day 1: SeeC Initialization
- Initialized source code files for SeeC project
- Set up src, `include/`, `tests/`, `build/` directories for SeeC structure
- Set up `Makefile`, `.gitignore` files for efficient workflow
- Set up `doc_log.txt` file for tracking progress

[2025-05-28] - Day 2: Source Folder Initialization
- Planned to support compilation of a `Hello, World` program
- Defined the interface of tokens in `token.h`
- Defined the driver structure of `main.c`
- Defined a subset of tokens in `token.c`
- Defined the lexer structure in `lexer.c`
- Defined a text driver in `lexer_test.c`

[2025-05-29] - Day 3: Tests Folder Initialization
- Defined the automated test for `Hello, World` in `test_lexer_hello.py`
- Corrected syntax and semantic errors in `main.c` and `token.c`
- Updated the Makefile to build seec executable

[2025-05-30] - Day 4: AST and Parser Initializations
- Defined the structure of AST in `ast.c` in `src/`
- Defined the procedure of parser in `parser.c` in `src/` 
- Developed a unit test of parser in `parser_test.c` in `src/`
- Automated the test of parser with Python script in `test_parser.py` in `tests`
- Integrated the procedure of the lexer to `lexer.c`
- Defined the main driver of `seec` in main.c

[2025-06-02] - Day 5: Lexer and Parser Testing Initialization
- Initializaed the program driver in `main.c`
- Developing unit tests for `lexer.c` and `parser.c`
- Planning regression tests for `main.c`

[2025-06-03] - Day 6: Refactoring SeeC
- Refactored the functionality of `src/`
- Refactored the functionality of `tests/`
- Refactored the utilities functionality of `src/` into `utils`
